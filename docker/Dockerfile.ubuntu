FROM ubuntu:noble

RUN apt-get update && \
    apt-get install --no-install-recommends -y apt-transport-https

# Install build dependencies
RUN apt-get install --no-install-recommends -y gcc make libc6-dev libx11-dev libxmu-dev libxcb-randr0-dev libpng-dev libssl-dev libunistring-dev

# Install test dependencies
RUN apt-get install --no-install-recommends -y openssl xclip python3-minimal diffutils findutils coreutils netcat-openbsd sed

RUN mkdir -p /debs
WORKDIR /debs
RUN apt-get download xvfb libunwind8 libgl1 libpixman-1-0 libxfont2 libglvnd0 libglx0 libfontenc1 libfreetype6 libbrotli1 xkb-data libxkbfile1 x11-xkb-utils && dpkg --force-depends -i ./*.deb 2>/dev/null
RUN apt-get clean -y

RUN useradd -mU -s /bin/bash user
USER user

# Set environment variables for tests
ENV TERM=xterm-256color
ENV DISPLAY=:0
ENV HOME=/home/user

RUN mkdir -p "$HOME/src"
WORKDIR "$HOME/src"

# Copy the source files
COPY Makefile main.c globals.h ./
COPY ./html html
RUN mkdir proto servers utils xclip xscreenshot
COPY ./proto/*.c ./proto/*.h proto/
COPY ./servers/*.c ./servers/*.h ./servers/*.S servers/
COPY ./utils/*.c ./utils/*.h utils/
COPY ./xclip/*.c ./xclip/*.h xclip/
COPY ./xscreenshot/*.c ./xscreenshot/*.h xscreenshot/

# Build
RUN make clean && make && make no_ssl && make web

# Prepare the test environment initialization script
COPY --chmod=755 ./docker/run_docker.sh docker/
COPY --chown=user:user ./tests tests

CMD ["docker/run_docker.sh"]
